@page "/update-parent/{parentId:int}"
@using AutoMapper
@using PSchool.Client.Models
@using PSchool.Client.Services.Interfaces
@inject IParentService ParentService
@inject IStudentService StudentService
@inject NavigationManager Navigation
@inject IMapper Mapper


<div class="add-parent-form">
    <h3>Update Parent</h3>

    <EditForm Model="parent" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div>
            <label>Parent Id: @parent.Id</label>
        </div>

        <div>
            <label>First Name</label>
            <InputText @bind-Value="parent.FirstName" class="form-control"/>
            <ValidationMessage For="@(() => parent.FirstName)"/>
        </div>

        <div>
            <label>Second Name</label>
            <InputText @bind-Value="parent.SecondName" class="form-control"/>
            <ValidationMessage For="@(() => parent.SecondName)"/>
        </div>

        <div>
            <label>Email</label>
            <InputText @bind-Value="parent.Email" class="form-control"/>
            <ValidationMessage For="@(() => parent.Email)"/>
        </div>

        <div>
            <label>Phone Number</label>
            <InputText @bind-Value="parent.PhoneNumber" class="form-control"/>
            <ValidationMessage For="@(() => parent.PhoneNumber)"/>
        </div>

        <button type="submit" class="btn btn-primary">Add Parent</button>
        <button class="cancel" type="button" @onclick="Cancel">Cancel</button>
    </EditForm>
</div>

@code {
    [Parameter] public int parentId { get; set; }

    private ParentUpdateModel parent = new ParentUpdateModel();

    protected override async Task OnInitializedAsync()
    {
        parent = Mapper.Map<ParentUpdateModel>(await ParentService.GetParents(parentId));
    }

    private async Task HandleValidSubmit()
    {
        await ParentService.UpdateParent(parent);
        Navigation.NavigateTo("/parents");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/parents");
    }
}